enum Gender {
  MALE
  FEMALE
  OTHER
}

scalar DateTime

type FileUploads {
  id: ID!
  createdAt: String
  fileName: String
  imageUrl: String
  mimeType: String
  originalName: String
}

type User {
  id: ID!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  email: String!
  password: String!
  userName: String
  firstName: String
  lastName: String
  imageKey: String
  gender: Gender
  fileUploads: [FileUploads!]!
  comments: [Comment!]!
  posts: [Post!]!
}

type JWTTokens {
    token: String
    refreshToken: String
}

input RegisterInput {
    email: String!
    password: String!
    userName: String!
    firstName: String
    lastName: String
    fileUploadId: String
    gender: Gender
}

input SignInInput {
    email: String!
    password: String!
}

input UpdateProfileInput {
  id: ID!
  userName: String
  firstName: String
  lastName: String
  imageKey: String
  gender: Gender
}

type Query {
  users: [User]!
  user(id: ID!): User
}

type Mutation {
  register(input: RegisterInput!): User!
  signIn(input: SignInInput!): JWTTokens!
  updateProfile(input: UpdateProfileInput!): User!
  removeUser(id: ID!): User
}
