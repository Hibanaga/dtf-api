enum ReactionType {
  like
  dislike
}

type Post {
  id: ID!
  userId: ID!
  title: String!
  imageKey: String
  likeCount: Int
  dislikeCount: Int
  comments: [Comment]!
}

type PaginationParams {
  id: ID
  total: Int
  page: Int
  perPage: Int
  lastPage: Int
  hasMorePages: Boolean
}

type PostsReponse {
  edges: [Post]!
  pageInfo: PaginationParams
}

input PostArguments {
     totalCount: Int
     page: Int
     perPage: Int
     lastPage: Int
}

input CreatePostInput {
  userId: ID!
  title: String!
  imageKey: String
}

input UpdatePostInput {
  id: ID!
  userId: ID!
  title: String!
  imageKey: String
}

input LikeUnlikePostInput {
  postId: ID!
  userId: ID!
  reactionType: ReactionType!
}

type Query {
  posts(input: PostArguments): PostsReponse!
  post(id: ID!): Post
}

type Mutation {
  createPost(input: CreatePostInput!): Post!
  updatePost(input: UpdatePostInput!): Post!
  likeUnlikePost(input: LikeUnlikePostInput!): Boolean
  removePost(id: ID!): Post
}
